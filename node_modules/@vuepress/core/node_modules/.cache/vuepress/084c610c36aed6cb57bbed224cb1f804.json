{"remainingRequest":"/Users/hudada/Documents/code/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hudada/Documents/code/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/hudada/Documents/code/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/hudada/Documents/code/blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/hudada/Documents/code/blog/docs/flow/README.md?vue&type=template&id=4a7c3e58&","dependencies":[{"path":"/Users/hudada/Documents/code/blog/docs/flow/README.md","mtime":1569481768701},{"path":"/Users/hudada/Documents/code/blog/node_modules/cache-loader/dist/cjs.js","mtime":1569221610181},{"path":"/Users/hudada/Documents/code/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1569221611410},{"path":"/Users/hudada/Documents/code/blog/node_modules/cache-loader/dist/cjs.js","mtime":1569221610181},{"path":"/Users/hudada/Documents/code/blog/node_modules/vue-loader/lib/index.js","mtime":1569221611410},{"path":"/Users/hudada/Documents/code/blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1569221610145}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("h1", { attrs: { id: "flow-使用入门" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#flow-使用入门", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Flow 使用入门")
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "认识" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#认识", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 认识")
      ]),
      _vm._v(" "),
      _c("p", [
        _c(
          "a",
          {
            attrs: {
              href: "https://flow.org/en/docs/getting-started/",
              target: "_blank",
              rel: "noopener noreferrer"
            }
          },
          [_vm._v("Flow"), _c("OutboundLink")],
          1
        ),
        _vm._v(" 是 facebook 出品的 JavaScript "),
        _c("strong", [_vm._v("静态类型检查工具")]),
        _vm._v(".")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "tip custom-block" }, [
        _c("p", [
          _vm._v(
            "Vue.js 的源码利用 Flow 做了静态类型检查,所以了解 Flow 有助于我们阅读源码."
          )
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "为什么用" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#为什么用", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 为什么用")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "JavaScript 是动态类型语言,它的灵活性有目共睹,但是过于灵活的副作用是很容易就写出非常隐蔽的隐患代码,在编译期甚至看上去都不会报错,但在运行阶段就可能出现各种奇怪的 bug."
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "类型检查是当前动态类型语言的发展趋势,所谓类型检查,就是在编译期尽早发现(由类型错误引起的)bug,又不影响代码运行(不需要运行时动态检查类型),使编写 JavaScript 具有和编写 Java 等强类型语言相近的体验."
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "项目越复杂就越需要通过工具的手段来保证项目的维护性和增强代码的可读性. Vue.js 在做 2.0 重构的时候,在 ES2015 的基础上,除了 ESLint 保证代码风格之外,也引入了 Flow 做静态类型检查.之所以选择 Flow,主要是因为 Babel 和 ESLint 都有对应的 Flow 插件以支持语法,可以完全沿用现有的构建配置,非常小成本的改动就可以拥有静态类型检查的能力."
        )
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "安装使用" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#安装使用", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 安装使用")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("div", { staticClass: "highlight-lines" }, [
          _c("br"),
          _c("div", { staticClass: "highlighted" }, [_vm._v(" ")]),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br")
        ]),
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1.")
            ]),
            _vm._v(" yarn add "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("-")
            ]),
            _vm._v("g flow"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("-")
            ]),
            _vm._v("bin "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 全局下载")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2.")
            ]),
            _vm._v(" flow init "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 生成.flowconfig文件,不初始化,flow指令会报错")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3.")
            ]),
            _vm._v(" 使用flow启动流后台进程"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("4.")
            ]),
            _vm._v(" 确定用 "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("//@flow 监视哪个文件流.")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5.")
            ]),
            _vm._v(" 为项目编写流程代码"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("6.")
            ]),
            _vm._v(" 检查代码的类型错误"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "tip custom-block" }, [
        _c("p", [_c("code", [_vm._v("// @flow")])]),
        _vm._v(" "),
        _c("p", [_vm._v("Flow会收集检测带有此注释的文件,忽略无此标志的文件.")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("也可以使用 "),
          _c("code", [_vm._v("/* @flow */")]),
          _vm._v(" 标记.")
        ]),
        _vm._v(" "),
        _c("p", [
          _c("code", [_vm._v("/* @flow weak */")]),
          _vm._v(" 只对有加类型注解的变量进行类型检测")
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "flow-的工作方式" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#flow-的工作方式", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Flow 的工作方式")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("通常类型检查分成 2 种方式：")]),
      _vm._v(" "),
      _c("ul", [
        _c("li", [
          _c("p", [
            _c("strong", [_vm._v("类型推断")]),
            _vm._v(
              "：通过变量的使用上下文来推断出变量类型,然后根据这些推断来检查类型."
            )
          ])
        ]),
        _vm._v(" "),
        _c("li", [
          _c("p", [
            _c("strong", [_vm._v("类型注释")]),
            _vm._v("：事先注释好我们期待的类型,Flow 会基于这些注释来判断.")
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "类型推断" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#类型推断", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 类型推断")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "它不需要任何代码修改即可进行类型检查,最小化开发者的工作量.它不会强制你改变开发习惯,因为它会自动推断出变量的类型.这就是所谓的类型推断,Flow 最重要的特性之一."
        )
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("通过一个简单例子说明一下：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("split")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("str")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" str"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("split")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("' '")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("split")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("11")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("Flow 检查上述代码后会报错,因为函数 "),
        _c("code", [_vm._v("split")]),
        _vm._v(" 期待的参数是"),
        _c("code", [_vm._v("字符串")]),
        _vm._v(",而我们输入了"),
        _c("code", [_vm._v("数字")]),
        _vm._v(".")
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "类型注释" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#类型注释", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 类型注释")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "如上所述,类型推断是 Flow 最有用的特性之一,不需要编写类型注释就能获取有用的反馈.但在某些特定的场景下,添加类型注释可以提供更好更明确的检查依据."
        )
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("考虑如下代码：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/*@flow*/")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("x"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" y")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" x "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'Hello'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("11")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("Flow 检查上述代码时检查不出任何错误,因为从语法层面考虑, "),
        _c("code", [_vm._v("+")]),
        _vm._v(" 既可以用在字符串上,也可以用在数字上,我们并没有明确指出 "),
        _c("code", [_vm._v("add()")]),
        _vm._v(" 的参数必须为数字.")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在这种情况下,我们可以借助类型注释来指明期望的类型.类型注释是以冒号 "
        ),
        _c("code", [_vm._v(":")]),
        _vm._v(" 开头,可以在函数参数,返回值,变量声明中使用.")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("如果我们在上段代码中添加类型注释,就会变成如下：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/*@flow*/")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("x"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" y"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" x "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" y"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'Hello'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("11")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "现在 Flow 就能检查出错误,因为函数参数的期待类型为数字,而我们提供了字符串."
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("上面的例子是针对函数的"),
        _c("code", [_vm._v("类型注释")]),
        _vm._v(".接下来我们来看看 Flow 能支持的一些常见的类型注释.")
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "基本类型注释-type-annotations" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: {
              href: "#基本类型注释-type-annotations",
              "aria-hidden": "true"
            }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 基本类型注释(Type Annotations)")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("JavaScript 中的基本类型,类型标注语法是在变量后加上一个"),
        _c("code", [_vm._v("冒号")]),
        _vm._v("和"),
        _c("code", [_vm._v("空格")]),
        _vm._v(",然后是"),
        _c("code", [_vm._v("相应的类型名称")]),
        _vm._v(",如：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'string'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" \n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" \n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" c"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" \n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" d"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("void")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("undefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Flow类型中用 `void` 替代 JavaScript 中的 `undefined`")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" e"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "tip custom-block" }, [
        _c("p", [
          _vm._v("在 Flow 中,"),
          _c("code", [_vm._v("大写开头")]),
          _vm._v("的类型名和"),
          _c("code", [_vm._v("小写开头")]),
          _vm._v("的类型名是有区别的.")
        ])
      ]),
      _vm._v(" "),
      _c("p", [_c("strong", [_vm._v("1.字面量值对应的类型名称是小写")])]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("x"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" y"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" z"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3.14")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"hello"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 又比如下面这种")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v(
                "// String 函数是将参数转化成一个字符串,仍然是小写的 string 类型 "
              )
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'b'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _c("strong", [
          _vm._v("2.大写开头的类型名称,其对应的值是 new 创建出来的类型实例")
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("x"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" Number"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" y"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" String"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" z"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" Boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("new")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Number")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("new")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"world"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("new")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("我们再进一步深入每个基本类型了解.")]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "boolean" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#boolean", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Boolean")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("Javascript还可以隐式地将其他类型的值转换为布尔值,如：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 42 => true")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('""')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v('// "" => false')
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("在Flow中,我们可以使用"),
        _c("code", [_vm._v("Boolean(x)")]),
        _vm._v("或"),
        _c("code", [_vm._v("!!x")]),
        _vm._v("显式完成这一个转换.")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("          "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("Boolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsBoolean")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("!")
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("!")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("        "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "warning custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [_vm._v("boolean 和 Boolean是不同的类型.")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("boolean是基本数据类型,true 和 false是它的两种基本值.")
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Boolean是个对象object,表示两个值：true或false.")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("更多参考 "),
          _c("a", { attrs: { href: "www.baidu.com" } }, [
            _vm._v("Boolean对象及Boolean函数")
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "number" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#number", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Number")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("       "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3.14")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("     "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("NaN")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("      "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("Infinity")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNumber")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "string" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#string", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" String")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("Javascript可以隐式地将其他类型的值转换为字符串类型,如：")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v('// "foo42"')
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v('// "foo[object Object]"')
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("Flow中会报错.")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("Flow中,我们必须显示转换类型：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("     "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('""')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("JSON")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "null和undefined" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#null和undefined", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Null和Undefined")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("Flow类型中用 "),
        _c("code", [_vm._v("void")]),
        _vm._v(" 替代 JavaScript 中的 "),
        _c("code", [_vm._v("undefined")]),
        _vm._v(".")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNull")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token keyword" } }, [
                _vm._v("null")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* ... */")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsUndefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token keyword" } }, [
                _vm._v("void")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* ... */")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNull")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("      "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsNull")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("undefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsUndefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("      "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsUndefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("undefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "maybe-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#maybe-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Maybe Type")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("Flow中"),
        _c("code", [_vm._v("Maybe Type")]),
        _vm._v("包含两个很容易混淆的概念：变量的可选类型("),
        _c("code", [_vm._v(": ?")]),
        _vm._v(")和对象的可选属性("),
        _c("code", [_vm._v("? :")]),
        _vm._v(").")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsMaybeString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("?")
              ]),
              _vm._v("string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsMaybeString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"bar"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("     "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsMaybeString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("undefined")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsMaybeString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("      "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsMaybeString")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("          "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "tip custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v(": ?类型")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("格式："),
          _c("code", [_vm._v(":")]),
          _vm._v(" +  "),
          _c("code", [_vm._v("空格")]),
          _vm._v(" + "),
          _c("code", [_vm._v("?")]),
          _vm._v(" + "),
          _c("code", [_vm._v("类型")])
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "表示 acceptsMaybeString 类型中,可以没有 value 属性,但如果出现了 "
          ),
          _c("code", [_vm._v("value")]),
          _vm._v(" 属性,其属性值不一定是 "),
          _c("code", [_vm._v("string")]),
          _vm._v(",还可以是 "),
          _c("code", [_vm._v("null")]),
          _vm._v(" 或 "),
          _c("code", [_vm._v("undefined")]),
          _vm._v("；")
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v("从另一个角度讲,只要 "),
          _c("code", [_vm._v("value")]),
          _vm._v(" 值不是 "),
          _c("code", [_vm._v("null")]),
          _vm._v(" 和 "),
          _c("code", [_vm._v("undefined")]),
          _vm._v(" 或 "),
          _c("code", [_vm._v("空")]),
          _vm._v(",就必须是指定的 "),
          _c("code", [_vm._v("string")]),
          _vm._v(" 类型.")
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("{")
              ]),
              _vm._v(" foo"),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("?")
              ]),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string "),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("}")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"bar"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("     "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("undefined")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("      "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("                 "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "tip custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("? :类型")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("格式："),
          _c("code", [_vm._v("?")]),
          _vm._v(" +  "),
          _c("code", [_vm._v("空格")]),
          _vm._v(" + "),
          _c("code", [_vm._v(":")]),
          _vm._v(" + "),
          _c("code", [_vm._v("类型")])
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v("表示 "),
          _c("code", [_vm._v("acceptsObject")]),
          _vm._v(" 类型中,可以没有 "),
          _c("code", [_vm._v("foo")]),
          _vm._v(" 属性,但如果出现了 "),
          _c("code", [_vm._v("foo")]),
          _vm._v(" 属性,属性值必须是一个 "),
          _c("code", [_vm._v("string")]),
          _vm._v(" 或 "),
          _c("code", [_vm._v("undefined")]),
          _vm._v(".")
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "在 JavaScript 中,访问对象的某个不存在的属性,会返回 undefined；所以对象的可选属性,其属性值要么是指定的类型(如上例中的 string),要么就是 undefined,"
          ),
          _c("strong", [_vm._v("不能是 null")]),
          _vm._v(".")
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v("从另一个角度讲,只要 foo 值不是  "),
          _c("code", [_vm._v("undefined")]),
          _vm._v(" 或 "),
          _c("code", [_vm._v("空")]),
          _vm._v(",就必须是 指定的 "),
          _c("code", [_vm._v("string")]),
          _vm._v(" 类型.")
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "联合类型注释-union-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#联合类型注释-union-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 联合类型注释(Union Type)")
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "语法" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#语法", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 语法")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("联合类型是通过"),
        _c("code", [_vm._v("|")]),
        _vm._v("连接的任意数量的类型.")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _vm._v("Type1 "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" Type2 "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("...")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" TypeN\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "示例" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#示例", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 示例")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("|")
              ]),
              _vm._v(" boolean "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("|")
              ]),
              _vm._v(" string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("       "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'three'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" prop"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'val'")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("4")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c(
        "h4",
        {
          attrs: {
            id: "联合类型的每个成员可以是任何类型-甚至可以是另一个联合类型"
          }
        },
        [
          _c(
            "a",
            {
              staticClass: "header-anchor",
              attrs: {
                href:
                  "#联合类型的每个成员可以是任何类型-甚至可以是另一个联合类型",
                "aria-hidden": "true"
              }
            },
            [_vm._v("#")]
          ),
          _vm._v(" 联合类型的每个成员可以是任何类型,甚至可以是另一个联合类型.")
        ]
      ),
      _vm._v(" "),
      _c("h4", { attrs: { id: "示例-2" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#示例-2", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 示例")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _vm._v("type Numbers "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\ntype Colors "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'red'")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'blue'")
            ]),
            _vm._v("\n\ntype Fish "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" Numbers "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" Colors"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "联结细化" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#联结细化", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 联结细化")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "如果是定义函数的参数是一个联结类型,需要在函数的内部针对每种类型都作出判断并进行相应处理.\n这个过程称为类型的细化(Type Refinement)."
        )
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "示例-3" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#示例-3", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 示例")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("toStringPrimitives")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" number "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("|")
              ]),
              _vm._v(" boolean "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("|")
              ]),
              _vm._v(" string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("typeof")
            ]),
            _vm._v(" value "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("===")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'number'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("else")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("typeof")
            ]),
            _vm._v(" value "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("===")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'boolean'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("else")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 在这个代码块里,可以放心将参数 value 当成string类型")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Flow 也会作出这样的推理")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("String")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "danger custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [_vm._v("在函数内部,我们需要处理所有可能的类型.")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("如果我们不处理每种可能的值类型,Flow将给我们一个错误.")
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "如上例中,我们需要处理value值为 number 或 boolean 或 string 的情况,如果少判断,就会报错."
          )
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "字面量类型注释-literal-types" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: {
              href: "#字面量类型注释-literal-types",
              "aria-hidden": "true"
            }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 字面量类型注释(Literal Types)")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("在 Flow 中,字面量值也可以作为一种类型,符合这种类型的变量"),
        _c("code", [_vm._v("只有这个字面量本身")]),
        _vm._v(".")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "给这个变量赋其他值, Flow 在进行类型检测时都会报错,比如下例所示."
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsTwo")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token number" } }, [
                _vm._v("2")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsTwo")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsTwo")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("acceptsTwo")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"2"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("可以将其和联结注释一起使用：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("getColor")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"success"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"warning"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"danger"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("switch")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("case")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"success"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"green"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("case")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"warning"')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"yellow"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("case")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"danger"')
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"red"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("getColor")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"success"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("getColor")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"danger"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("getColor")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"error"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "混合类型-mixed-types" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#混合类型-mixed-types", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 混合类型(Mixed Types)")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("传入的值可以是任何类型，并且该函数仍然可以使用。")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("getTypeOf")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" mixed")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("typeof")
            ]),
            _vm._v(" value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3.14")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("null")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "danger custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "当使用mixed类型的值时，必须首先弄清楚实际的类型是什么，否则Flow报错。"
          )
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" mixed")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('""')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("必须通过判断优化来确保该值是某种类型。")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" mixed")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("if")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("typeof")
            ]),
            _vm._v(" value "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("===")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'string'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('""')
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" value"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("else")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('""')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("stringify")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "任意类型注释-any-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#任意类型注释-any-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 任意类型注释(Any Type)")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("给变量标注为 any 类型后,这个变量可以是任意值.")]),
      _vm._v(" "),
      _c("p", [
        _vm._v("基本上相当于告诉 Flow：这个变量的类型我有把握，你不用管。")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("one"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" any"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" two"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" any")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" one "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" two"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("     "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works.")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"1"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"2"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works.")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("add")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works.")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("blockquote", [
        _c("p", [
          _vm._v(
            "在将 Flow 渐进的应用到你的项目中时，可能 Flow 针对某些变量的报错是不需要处理的，你可以标注为这种类型消除错误。"
          )
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "变量类型注释-variable-types" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: {
              href: "#变量类型注释-variable-types",
              "aria-hidden": "true"
            }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 变量类型注释(Variable Types)")
      ]),
      _vm._v(" "),
      _c("ul", [
        _c("li", [_vm._v("let和var- 可以重新分配的变量。")]),
        _vm._v(" "),
        _c("li", [_vm._v("const- 无法重新分配的变量。")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("var")
            ]),
            _vm._v(" varVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" letVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" constVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\nvarVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\nletVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\nconstVariable "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" foo "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* : number */")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" bar"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\nfoo "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("   "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\nfoo "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"3"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "函数类型注释-function-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: {
              href: "#函数类型注释-function-type",
              "aria-hidden": "true"
            }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 函数类型注释(Function Type)")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("concat")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("a"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(",")
              ]),
              _vm._v(" b"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("return")
            ]),
            _vm._v(" a "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("concat")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"foo"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"bar"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// contact(): string 代表返回值，需要时string类型")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("concat")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "对象类型注释-object-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#对象类型注释-object-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 对象类型注释(Object Type)")
      ]),
      _vm._v(" "),
      _c("h4", { attrs: { id: "语法-2" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#语法-2", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 语法")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 函数声明 ")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("var")
            ]),
            _vm._v(" obj1"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("var")
            ]),
            _vm._v(" obj2"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  bar"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  baz"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  bar"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  baz"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'three'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 函数表达式")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" "),
            _c(
              "span",
              {
                pre: true,
                attrs: { class: "token function-variable function" }
              },
              [_vm._v("greeting")]
            ),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("welcome"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" string")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("void")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n console"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("log")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("welcome"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 箭头函数")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" addNumber "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("number")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=>")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _vm._v("a "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("+")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "warning custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [_vm._v("来拆分名称/值对时,应该使用逗号,。")])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "上面这种写法非常不直观，类型定义内容跟对象本身混在一起；优化的方式是像下面这样"
        ),
        _c("code", [_vm._v("将类型定义和类型标注分开")]),
        _vm._v("。")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("div", { staticClass: "highlight-lines" }, [
          _c("br"),
          _c("div", { staticClass: "highlighted" }, [_vm._v(" ")]),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br"),
          _c("br")
        ]),
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v(
                "// type 是 Flow 中的关键字，用来定义自定义的类型，并且可以在后面的类型标注中使用"
              )
            ]),
            _vm._v("\ntype BorderConfigType "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    width"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    color"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    hasShadow"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" borderConfig "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" BorderConfigType "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    width"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("10")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    color"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'red'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n    hasShadow"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "数组类型注释-array-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#数组类型注释-array-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 数组类型注释(Array Type)")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("要创建数组类型，可以使用"),
        _c("code", [_vm._v("Array<Type>")]),
        _vm._v(
          "type,其中where Type是数组中元素的类型。\n即Array 后接一对尖括号，且尖括号里边就是数组项的类型名称.\n例如，要使用数字数组创建类型，请使用"
        ),
        _c("code", [_vm._v("Array<number>")]),
        _vm._v(".")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" arr"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v("Array"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _vm._v("number"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("也可以放入其它类型：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" arr1"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" Array"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _vm._v("boolean"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("false")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" arr2"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" Array"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _vm._v("string"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"A"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"B"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"C"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" arr3"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" Array"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("<")
            ]),
            _vm._v("mixed"),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(">")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"three"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h4", { attrs: { id: "简写语法-type-t" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#简写语法-type-t", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 简写语法 "),
        _c("code", [_vm._v("Type[T]")])
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("即类型名称后加一对中括号,T 表示数组中每项的数据类型.")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" arr"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "元组类型注释-tuple-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#元组类型注释-tuple-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 元组类型注释(Tuple Type)")
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("另外一种常见的数组是元组（Tuple）。")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在其他语言里，元组可能是一个特定的类型结构；但是在 JS 里，元组就是数组来表示的，并且是一个有限数组，数组每一项的类型分别标注出来.\n我们可以用 "
        ),
        _c("code", [_vm._v("[type, type, type]")]),
        _vm._v(" 创建元组.")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" tuple1"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _vm._v("number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" tuple2"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _vm._v("number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" boolean"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" tuple3"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _vm._v("number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" boolean"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"three"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v("当我们从特定索引的元组中获取值时，它将返回该索引处的类型。")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" tuple"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _vm._v("number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" boolean"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"three"')
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" num  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number  "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" tuple"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("0")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" bool "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" tuple"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("let")
            ]),
            _vm._v(" str  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string  "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" tuple"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("[")
            ]),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("]")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "通常的使用场景:比如一个用来表示数据库纪录的数组，比如函数返回多个返回值。"
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "warning custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "一个数组被标注为元组类型后，每一项的类型都不可再次改变，且数组的长度也不能改变."
          )
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "因此对元组类型的数组进行 push、pop 操作，都是 Flow 不允许的。"
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("访问不存在的索引也会导致出现索引越界错误。")]),
        _vm._v(" "),
        _c("div", { staticClass: "language-js extra-class" }, [
          _c("pre", { pre: true, attrs: { class: "language-js" } }, [
            _c("code", [
              _c("span", { pre: true, attrs: { class: "token keyword" } }, [
                _vm._v("let")
              ]),
              _vm._v(" none "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("=")
              ]),
              _vm._v(" tuple"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("[")
              ]),
              _c("span", { pre: true, attrs: { class: "token number" } }, [
                _vm._v("3")
              ]),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v("]")
              ]),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(";")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token comment" } }, [
                _vm._v("// Error!")
              ]),
              _vm._v("\n")
            ])
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "类-类型注释-class-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#类-类型注释-class-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 类 类型注释(Class Type)")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "每当我们要在Flow中使用类字段时，都必须首先为其添加注释，否则报错。"
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("class")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("MyClass")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("this")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("prop "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!因为没有对 props 进行类型标注")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("class")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("WrongClass2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("this")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("props"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v(
                "// Error! Flow 还是会报错，对属性的类型标注必须与方法同一个层级"
              )
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("class")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("MyClass")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  prop"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("this")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(".")
            ]),
            _vm._v("prop "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("42")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Work!")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" mc"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" MyClass "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("new")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("MyClass")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "类型别名-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#类型别名-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 类型别名(Type)")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "从上面我们知道，当我们需要要在多个位置用复杂类型时，可以为它们加上别名,这个别名也可以在其他地方使用."
        )
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _vm._v("类型别名是使用关键字"),
          _c("code", [_vm._v("type")]),
          _vm._v("创建的。")
        ])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\ntype MyObject "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  foo"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  bar"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  baz"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("var")
            ]),
            _vm._v(" val"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" MyObject "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* ... */")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("val"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" MyObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* ... */")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("class")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token class-name" } }, [
              _vm._v("Foo")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("constructor")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("val"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" MyObject")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("/* ... */")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("h2", { attrs: { id: "交叉类型注释-union-type" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#交叉类型注释-union-type", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 交叉类型注释(Union Type)")
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "语法-3" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#语法-3", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 语法")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// 交叉点类型是由＆符连接的任何类型的类型")
            ]),
            _vm._v("\nType1 "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v(" Type2 "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("...")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v(" TypeN\n")
          ])
        ])
      ]),
      _c("h3", { attrs: { id: "示例-4" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#示例-4", "aria-hidden": "true" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" 示例")
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("A")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("B")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("C")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" c"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("function")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token parameter" } }, [
              _vm._v("value"),
              _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
                _vm._v(":")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token constant" } }, [
                _vm._v("A")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("&")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token constant" } }, [
                _vm._v("B")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token operator" } }, [
                _vm._v("&")
              ]),
              _vm._v(" "),
              _c("span", { pre: true, attrs: { class: "token constant" } }, [
                _vm._v("C")
              ])
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// ...")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// $ExpectError")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("method")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("(")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v(" a"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" b"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v(" c"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'three'")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(")")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works!")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("div", { staticClass: "warning custom-block" }, [
        _c("p", { staticClass: "custom-block-title" }, [_vm._v("注意")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("我们需要传入所有的类型,否则Flow将给我们一个错误,如上例.")
        ])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "进一步理解：\n定义为类型 C 的变量，其取值必须满足 A 类型约束，又满足 B 类型约束；"
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("X1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("2")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("4")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("X2")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v("         "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("4")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("6")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("|")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("7")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("X3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("X1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("X2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [
        _vm._v(
          "在以上代码中，X3 就是一个交叉类型。类型为 X3 的变量，其取值必须受 X1 类型约束，又受 X2 的类型约束，所以取值只可能是 3 或者 4 或者 5；"
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  male"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" boolean\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y2")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("\n  name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" string"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n  age"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" number\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _vm._v("\ntype "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y1")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("&")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y2")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ]),
      _c("p", [_vm._v("而在这里例子中，类型那个 Y3 允许的取值是什么呢？")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "按照 X3 的经验，很可能认为其取值必须是一个对象，且对象有一个 name 属性，因为毕竟 Y1 和 Y2 只有 name 这么一个共有属性。"
        )
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("其实这么理解是不对的.\n我们需要重新解读 Y1 和 Y2:")]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _vm._v(
            "符合 Y1 类型的值，必须是一个对象，且必须有一个 name 属性，属性值是字符串类型；且有一个 male 属性，属性值是布尔值类型；"
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Y2同理。")])
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("而 Y3 必须受到 Y1 和 Y2 的约束。因此 Y3 类型的值必须：")
      ]),
      _vm._v(" "),
      _c("ol", [
        _c("li", [_vm._v("是一个对象；")]),
        _vm._v(" "),
        _c("li", [_vm._v("有 name 属性，属性值是字符串；")]),
        _vm._v(" "),
        _c("li", [_vm._v("有 male 属性，属性值是布尔值；")]),
        _vm._v(" "),
        _c("li", [_vm._v("有 age 属性，属性值是数字类型。")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-js extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-js" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// @flow")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" wrong"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Flow 会报错，因为缺少 male 和 age 属性")
            ]),
            _vm._v("\n    name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'y3'")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Error!  ")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n\n"),
            _c("span", { pre: true, attrs: { class: "token keyword" } }, [
              _vm._v("const")
            ]),
            _vm._v(" right"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token constant" } }, [
              _vm._v("Y3")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v("=")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{")
            ]),
            _vm._v("  "),
            _c("span", { pre: true, attrs: { class: "token comment" } }, [
              _vm._v("// Works！可以通过 Flow 的类型检测")
            ]),
            _vm._v("\n   name"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v("'y3'")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n   male"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token boolean" } }, [
              _vm._v("true")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(",")
            ]),
            _vm._v("\n   age"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(":")
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token number" } }, [
              _vm._v("5")
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}")
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(";")
            ]),
            _vm._v("\n")
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}